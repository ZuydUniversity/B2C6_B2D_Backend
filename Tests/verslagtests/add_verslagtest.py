
# Generated by CodiumAI
from App.Repos.VerslagRepo import VerslagRepo


# Dependencies:
# pip install pytest-mock
import pytest

class TestAddVerslag:

    # Successfully adds a new verslag with valid inputs
    def test_add_verslag_with_valid_inputs(self, mocker):
        # Arrange
        mock_db = mocker.Mock()
        repo = VerslagRepo(mock_db)
        date = "2023-10-01"
        healthcomplaints = "Headache"
        medicalhistory = "None"
        diagnose = "Migraine"
        zorgverlener_id = 1
        patient_id = 1

        # Act
        verslag = repo.add_verslag(date, healthcomplaints, medicalhistory, diagnose, zorgverlener_id, patient_id)

        # Assert
        assert verslag.date == date
        assert verslag.healthcomplaints == healthcomplaints
        assert verslag.medicalhistory == medicalhistory
        assert verslag.diagnose == diagnose
        assert verslag.zorgverlener_id == zorgverlener_id
        assert verslag.patient_id == patient_id
        mock_db.add.assert_called_once_with(verslag)
        mock_db.commit.assert_called_once()
        mock_db.refresh.assert_called_once_with(verslag)

    # Adds verslag with some optional fields as None
    def test_add_verslag_with_optional_fields_as_none(self, mocker):
        # Arrange
        mock_db = mocker.Mock()
        repo = VerslagRepo(mock_db)
        date = "2023-10-01"
        healthcomplaints = None
        medicalhistory = None
        diagnose = "Migraine"
        zorgverlener_id = None
        patient_id = None

        # Act
        verslag = repo.add_verslag(date, healthcomplaints, medicalhistory, diagnose, zorgverlener_id, patient_id)

        # Assert
        assert verslag.date == date
        assert verslag.healthcomplaints == healthcomplaints
        assert verslag.medicalhistory == medicalhistory
        assert verslag.diagnose == diagnose
        assert verslag.zorgverlener_id == zorgverlener_id
        assert verslag.patient_id == patient_id
        mock_db.add.assert_called_once_with(verslag)
        mock_db.commit.assert_called_once()
        mock_db.refresh.assert_called_once_with(verslag)

        # pytest Tests/verslagtests/add_verslagtest.py