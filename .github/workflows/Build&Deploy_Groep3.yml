name: Groep-3 Unit Test oefenen

on:
  push:
    branches:
      - "Groep-3-Casus-branch"

env:
  HOST: 13.93.11.167
  SERVER_USER: groep3admin
  SERVER_PASSWORD: groep3admin@

concurrency:
  group: groep_3_B2D
  cancel-in-progress: false

jobs:
  Unit_Tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install fastapi uvicorn sqlalchemy pymysql
          pip install pytest pytest-cov pytest-mock

      - name: Run tests
        id: run_tests
        run: |
          pytest Tests/verslagtests/add_verslagtest.py
          pytest Tests/verslagtests/delete_verslagtest.py
          pytest Tests/verslagtests/update_verslagtest.py

      - name: Slack Notification on Success
        if: success()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: good
          SLACK_ICON: https://cdn.discordapp.com/attachments/1015233182209159201/1247122042848022538/7503aw.png
          SLACK_MESSAGE: |
            BACKEND
            Test Automation Report: https://github.com/ZuydUniversity/B2C6_B2D_Backend/actions/runs/${{github.run_id}}
            Unit Test Result: Success
          SLACK_TITLE: 'Unit Test Success'
          SLACK_WEBHOOK: ${{ secrets.GROEP_DRIE }}

      - name: Slack Notification on Failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: danger
          SLACK_ICON: https://cdn.discordapp.com/attachments/1015233182209159201/1247122042848022538/7503aw.png
          SLACK_MESSAGE: |
            BACKEND
            Test Automation Report: https://github.com/ZuydUniversity/B2C6_B2D_Backend/actions/runs/${{github.run_id}}
            Unit Test Result: Failure
          SLACK_TITLE: 'Unit Test Failure'
          SLACK_WEBHOOK: ${{ secrets.GROEP_DRIE }}
  
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Pulling git repo
        uses: actions/checkout@v4
        
      - name: Install python version 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Update pip
        run: python -m pip install --upgrade pip

      - name: Install all dependencies
        run: | 
          sudo apt-get update
          sudo apt install libmariadb3 libmariadb-dev -y
          pip install -r requirements.txt

      - name: Create database, user and grant privileges
        run: |
          sudo apt-get install mariadb-server -y
          sudo mysql -u root -e "CREATE DATABASE IF NOT EXISTS jdb_db_test;"
          sudo mysql -u root -e "CREATE DATABASE IF NOT EXISTS jdb_db;"
          sudo mysql -u root -e "CREATE USER 'API'@'localhost' IDENTIFIED BY 'Welkom123!';"
          sudo mysql -u root -e "GRANT ALL PRIVILEGES ON jdb_db_test.* TO 'API'@'localhost';"
          sudo mysql -u root -e "GRANT ALL PRIVILEGES ON jdb_db.* TO 'API'@'localhost';"
      
      - name: UnitTests
        run: |
          pytest --disable-warnings -v -x -s
      
      - name: Build API artifacts
        run: | 
          mkdir API
          cp -r alembic App main.py requirements.txt API/
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: API
          path: API
       
  deploy:
      runs-on: ubuntu-latest
      needs: [build]
      steps:
        - name: Download artifacts
          uses: actions/download-artifact@v4
          with:
            name: API
            path: API

        - name: Reboot Server
          uses: appleboy/ssh-action@v1.0.3
          with:
            host: ${{env.HOST}}
            username: ${{env.SERVER_USER}}
            password: ${{env.SERVER_PASSWORD}}
            script: |
              sudo reboot
              exit

        - name: Wait for server to reboot
          run: sleep 20

        - name: Clean Old Artefact
          uses: appleboy/ssh-action@v1.0.3
          with:
            host: ${{env.HOST}}
            username: ${{env.SERVER_USER}}
            password: ${{env.SERVER_PASSWORD}}
            script: |
              sudo rm -rf API
        
        - name: Deploy to ubuntu server
          uses: garygrossgarten/github-action-scp@release
          with:
            local: API
            remote: API
            host: ${{env.HOST}}
            username: ${{env.SERVER_USER}}
            password: ${{env.SERVER_PASSWORD}}

        - name: Install dependenties
          uses: appleboy/ssh-action@v1.0.3
          with:
            host: ${{env.HOST}}
            username: ${{env.SERVER_USER}}
            password: ${{env.SERVER_PASSWORD}}
            script: |
              sudo apt install python3-pip -y
              python3 -m pip install --upgrade pip
              pip install mariadb
              sudo apt-get update -y
              sudo apt install libmariadb3 libmariadb-dev -y
              cd API
              sudo pip install -r requirements.txt

        - name: Start API
          uses: appleboy/ssh-action@v1.0.3
          with:
            host: ${{env.HOST}}
            username: ${{env.SERVER_USER}}
            password: ${{env.SERVER_PASSWORD}}
            script: |
              ( cd API ; nohup sudo uvicorn main:app --host 0.0.0.0 --port 8000 >api.log 2>&1 </dev/null & )
              ( cd FrontEnd ; nohup sudo npm run start -- -p 80 >frontend.log 2>&1 </dev/null & )
             

        - name: Slack Notification on Success
          if: success()
          uses: rtCamp/action-slack-notify@v2
          env:
              SLACK_COLOR: good
              SLACK_ICON: https://cdn.discordapp.com/attachments/1015233182209159201/1247122042848022538/7503aw.png
              SLACK_MESSAGE: |
                BACKEND
                Test Automation Report: https://github.com/ZuydUniversity/B2C6_B2D_Backend/actions/runs/${{github.run_id}}
                Unit Test Result: Success
                SLACK_TITLE: 'Unit Test Success'
                SLACK_WEBHOOK: ${{ secrets.GROEP_DRIE }}
      
        - name: Slack Notification on Failure
          if: failure()
          uses: rtCamp/action-slack-notify@v2
          env:
              SLACK_COLOR: danger
              SLACK_ICON: https://cdn.discordapp.com/attachments/1015233182209159201/1247122042848022538/7503aw.png
              SLACK_MESSAGE: |
                BACKEND
                Test Automation Report: https://github.com/ZuydUniversity/B2C6_B2D_Backend/actions/runs/${{github.run_id}}
                Unit Test Result: Failure
                SLACK_TITLE: 'Unit Test Failure'
                SLACK_WEBHOOK: ${{ secrets.GROEP_DRIE }}


