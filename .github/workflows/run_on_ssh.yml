name: run_on_ssh

on:
  push:
  workflow_dispatch:

env:
  LOCAL_DIST: "/tmp/dist"
  REMOTE_HOST: "108.142.148.168"
  REMOTE_USER: "groep2" 
  REMOTE_PASSWORD: "groep-2Hexagon"
  REMOTE_DIST: "/tmp/app"  # "~/<remote_dir>
  SLACK_WEBHOOK_URL: ${{ secrets.GROEP_2_SLACK_WEBHOOK }}
  SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK"

jobs:
  upload_on_ssh:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: prepare dist
        run: |
          cp -r . "${{ env.LOCAL_DIST }}"
          rm -rf "${{ env.LOCAL_DIST }}/.git"

      - name: Deploy to ubuntu server
        uses: garygrossgarten/github-action-scp@release
        with:
          local: ${{ env.LOCAL_DIST }}
          host: ${{ env.REMOTE_HOST }}
          username: ${{ env.REMOTE_USER }}
          password: ${{ env.REMOTE_PASSWORD }}
          remote: ${{ env.REMOTE_DIST }}

  run_on_ssh:
    runs-on: ubuntu-latest
    needs: upload_on_ssh
    steps:
        - uses: appleboy/ssh-action@v1.0.3
          with:
            host: ${{ env.REMOTE_HOST }}
            username: ${{ env.REMOTE_USER }}
            password: ${{ env.REMOTE_PASSWORD }}
            script: |
              # kill old instance
              ps -faux
              pkill fastapi  
              ps -faux

              # install pipeline runtime
              sudo apt-get update -y
              sudo apt install python3-venv -y
              
              # create venv (required for installing packages)
              cd "${{ env.REMOTE_DIST }}"
              python3 -m venv venv
              source ./venv/bin/activate

              # install app dependencies
              pip install -r requirements.txt
              sudo apt install libmariadb3 libmariadb-dev -y
              
              # run
              # nohup ./venv/bin/fastapi run main.py 2>&1 1>>~/fastapi.log &
              nohup uvicorn main:app --host 0.0.0.0 --port 8000 >api.log 2>&1 </dev/null &

              # get ip
              echo "[+] hosting website on http://${{ env.REMOTE_HOST }}:8000"

              # stop ssh session (complete workflow step)
              exit

        - id: slack
          uses: slackapi/slack-github-action@v1.26.0
          with:
            # This data can be any valid JSON from a previous step in the GitHub Action
            payload: |
              {
                "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
                "blocks": [
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "GH workflow `run_on_ssh`: <${{ github.event.pull_request.html_url || github.event.head_commit.url }}|${{ job.status }}>"
                    }
                  }
                ]
              }
