# name: Groep 6 Test
# on:
#   push:
#     branches:
#       - "groep6_b2d_Hassan"

# env:
#   TEST: envs_kunnen ook global

# jobs:
#   build:
#     env:
#       DATABASE_HOSTNAME: localhost
#       DATABASE_PORT: 5432
#       DATABASE_PASSWORD: Welkom123456!
#       DATABASE_NAME: fastapi
#       DATABASE_USERNAME: postgres
#       SECRET_KEY: SUPERSECRETKEY
#       ALGORITHM: HS256
#       ACCESS_TOKEN_EXPIRE_MINUTES: 30

#     runs-on: ubuntu-latest
#     steps:
#       - name: Log checked branch
#         run:  echo "Checked out branch ${{ github.ref }}"
#       - name: Pulling repo
#         uses: actions/checkout@v2
        
#       - name: Install python version 3.12
#         uses: actions/setup-python@v2
#         with:
#           python-version: "3.12"
#       - name: Update pip
#         run: python -m pip install --upgrade pip
#       - name: Install dependencies
#         run: | 
#           sudo apt install libmariadb3 libmariadb-dev -y
#           pip install -r requirements.txt
#       - name: Unittest
#         run: echo "Dit is een test"

#   deploy:
#       runs-on: ubuntu-latest
#       needs: [build]
#       steps:
#         - name: Pulling repo
#           uses: actions/checkout@v2
#         - name: Create artefact
#           run: |
#             mkdir dist
#             pwd
#             cp -r App main.py requirements.txt dist/
#             ls
#         - name: Reboot Server
#           uses: appleboy/ssh-action@v1.0.3
#           with:
#             host: 52.232.64.59
#             username: groep6
#             password: Welkom123456!
#             script: |
#               sudo reboot
#               exit
#         - name: Wait for server to reboot
#           run: sleep 20
#         - name: Deploy to ubuntu server
#           uses: garygrossgarten/github-action-scp@release
#           with:
#             local: dist
#             remote: API
#             host: 52.232.64.59
#             username: groep6
#             password: Welkom123456!
#         - name: Start API
#           uses: appleboy/ssh-action@v1.0.3
#           with:
#             host: 52.232.64.59
#             username: groep6
#             password: Welkom123456!
#             script: |
#               python3 -m pip install --upgrade pip
#               pip install mariadb
#               sudo apt-get update -y
#               sudo apt install libmariadb3 libmariadb-dev -y
#               cd API
#               sudo pip install -r requirements.txt
#               nohup sudo uvicorn main:app --host 0.0.0.0 --port 80 >api.log 2>&1 </dev/null &
#               exit

name: Deploy Test
on:
  push:
    branches:
      - "groep6_b2d_Hassan"

env:
  HOST: 52.232.64.59
  SERVER_USER: groep6
  SERVER_PASSWORD: Welkom123456!

concurrency:
  group: groep6_b2d
  cancel-in-progress: false


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Pulling git repo
        uses: actions/checkout@v4
        
      - name: Install python version 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Update pip
        run: python -m pip install --upgrade pip

      - name: Install all dependencies
        run: | 
          sudo apt install libmariadb3 libmariadb-dev -y
          pip install -r requirements.txt
      
      - name: UnitTests
        run: echo "Test"
      
      - name: Build API artifacts
        run: | 
          mkdir API
          cp -r App main.py requirements.txt API/
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: API
          path: API
       
  deploy:
      runs-on: ubuntu-latest
      needs: [build]
      steps:
        - name: Download artifacts
          uses: actions/download-artifact@v4
          with:
            name: API
            path: API

        - name: Reboot Server
          uses: appleboy/ssh-action@v1.0.3
          with:
            host: ${{env.HOST}}
            username: ${{env.SERVER_USER}}
            password: ${{env.SERVER_PASSWORD}}
            script: |
              sudo reboot
              exit

        - name: Wait for server to reboot
          run: sleep 20

        - name: Clean Old Artefact
          uses: appleboy/ssh-action@v1.0.3
          with:
            host: ${{env.HOST}}
            username: ${{env.SERVER_USER}}
            password: ${{env.SERVER_PASSWORD}}
            script: |
              sudo rm -rf API
        
        - name: Deploy to ubuntu server
          uses: garygrossgarten/github-action-scp@release
          with:
            local: API
            remote: API
            host: ${{env.HOST}}
            username: ${{env.SERVER_USER}}
            password: ${{env.SERVER_PASSWORD}}

        - name: Install dependenties
          uses: appleboy/ssh-action@v1.0.3
          with:
            host: ${{env.HOST}}
            username: ${{env.SERVER_USER}}
            password: ${{env.SERVER_PASSWORD}}
            script: |
              sudo apt install python3-pip -y
              python3 -m pip install --upgrade pip
              pip install mariadb
              sudo apt-get update -y
              sudo apt install libmariadb3 libmariadb-dev -y
              cd API
              sudo pip install -r requirements.txt

        - name: Start API
          uses: appleboy/ssh-action@v1.0.3
          with:
            host: ${{env.HOST}}
            username: ${{env.SERVER_USER}}
            password: ${{env.SERVER_PASSWORD}}
            script: |
              ( cd API ; nohup sudo uvicorn main:app --host 0.0.0.0 --port 8000 >api.log 2>&1 </dev/null & )
              ( cd FrontEnd ; nohup sudo npm run start -- -p 80 >frontend.log 2>&1 </dev/null & )

        - name: Notify Slack Success
          if: ${{ success() }}
          id: slack-success
          uses: slackapi/slack-github-action@v1.26.0
          with:
            payload: |
              {
              	"blocks": [
              		{
              			"type": "section",
              			"text": {
              				"type": "mrkdwn",
              				"text": "*GitHub Action Build and Deploy Result:* ${{Job.Status}} ðŸŽ‰ \n*Commit:* [Link](${{ github.event.head_commit.url }})"
              			}
              		}
              	]
              }
          env:
            SLACK_WEBHOOK_URL: ${{secrets.GROEP_6_SLACK_WEBHOOK}}
            SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        
        - name: Notify Slack Failure
          if: ${{ failure() }}
          id: slack-failure
          uses: slackapi/slack-github-action@v1.26.0
          with:
            payload: |
              {
              	"blocks": [
              		{
              			"type": "section",
              			"text": {
              				"type": "mrkdwn",
              				"text": "*GitHub Action Build and Deploy Result:* ${{Job.Status}} ðŸ˜ž \n*Commit:* [Link](${{ github.event.head_commit.url }})"
              			}
              		}
              	]
              }
          env:
            SLACK_WEBHOOK_URL: ${{secrets.GROEP_6_SLACK_WEBHOOK}}
            SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
